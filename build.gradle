plugins {
    id 'org.springframework.boot' version '3.0.1'
    id 'io.spring.dependency-management' version '1.1.0'
    id 'java'
}

jar {
    enabled = false
}

group 'cricket-club'
version '1.0-SNAPSHOT'
sourceCompatibility = JavaVersion.VERSION_19


repositories {
    mavenLocal()
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-webflux'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.liquibase:liquibase-core'
    implementation 'io.springfox:springfox-boot-starter:3.0.0'
    implementation 'io.springfox:springfox-swagger-ui:3.0.0'
    runtimeOnly 'mysql:mysql-connector-java'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'io.projectreactor:reactor-test'
    testImplementation 'org.junit.jupiter:junit-jupiter-api'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine'
    testImplementation 'org.testcontainers:testcontainers:1.17.6'
    testImplementation 'org.testcontainers:mysql:1.17.6'
    testImplementation 'org.testcontainers:junit-jupiter:1.17.6'
}

test {
    testLogging {
        events "passed", "skipped", "failed"
    }
    useJUnitPlatform()
}

sourceSets {
    testIntegration {
        java {
            compileClasspath += main.output
            compileClasspath += main.compileClasspath

            compileClasspath += test.output
            compileClasspath += test.compileClasspath

            runtimeClasspath += test.runtimeClasspath
        }

        java.srcDir file('src/testIntegration/java')
        resources.srcDir file('src/testIntegration/resources')

    }
}

task testIntegration(type: Test, description: 'Runs integration tests.') {
    classpath = sourceSets.testIntegration.runtimeClasspath
    setTestClassesDirs(sourceSets.testIntegration.output.classesDirs)

    testLogging {
        events "passed", "started", "skipped", "failed"
    }
    useJUnitPlatform()
}

build.dependsOn testIntegration
